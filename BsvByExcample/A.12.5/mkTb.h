/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
 * 
 * On Fri Jan 12 16:20:23 CET 2024
 * 
 */

/* Generation options: */
#ifndef __mkTb_h__
#define __mkTb_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkTb module */
class MOD_mkTb : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt8> INST_cycle;
  MOD_Reg<tUInt8> INST_failCond;
  MOD_Reg<tUInt32> INST_regstatus;
  MOD_Reg<tUInt8> INST_vecstatus_0;
  MOD_Reg<tUInt8> INST_vecstatus_1;
  MOD_Reg<tUInt8> INST_vecstatus_2;
  MOD_Reg<tUInt8> INST_vecstatus_3;
  MOD_Reg<tUInt8> INST_vecstatus_4;
  MOD_Reg<tUInt8> INST_vecstatus_5;
  MOD_Reg<tUInt8> INST_vecstatus_6;
  MOD_Reg<tUInt8> INST_vecstatus_7;
  MOD_Reg<tUInt8> INST_vecstatus_8;
  MOD_Reg<tUInt8> INST_vecstatus_9;
 
 /* Constructor */
 public:
  MOD_mkTb(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_failCond___d9;
 
 /* Local definitions */
 private:
  tUInt8 DEF_x__h2738;
  tUInt32 DEF_regstatus__h3418;
  tUInt8 DEF_b__h2720;
  tUInt8 DEF_regstatus_BITS_19_TO_18___h2789;
  tUInt8 DEF_regstatus_BITS_17_TO_16___h2859;
  tUInt8 DEF_regstatus_BITS_15_TO_14___h2929;
  tUInt8 DEF_regstatus_BITS_13_TO_12___h2999;
  tUInt8 DEF_regstatus_BITS_11_TO_10___h3069;
  tUInt8 DEF_regstatus_BITS_9_TO_8___h3139;
  tUInt8 DEF_regstatus_BITS_7_TO_6___h3209;
  tUInt8 DEF_regstatus_BITS_5_TO_4___h3279;
  tUInt8 DEF_regstatus_BITS_3_TO_2___h3349;
  tUInt8 DEF_regstatus_BITS_1_TO_0___h3419;
 
 /* Rules */
 public:
  void RL_checkChannel();
  void RL_updateRegStatus();
  void RL_displayReg();
  void RL_updateVecStauts();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkTb &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkTb &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkTb &backing);
};

#endif /* ifndef __mkTb_h__ */
