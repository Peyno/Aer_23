/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
 * 
 * On Sun Feb 18 18:28:48 CET 2024
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkTB.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkTB::MODEL_mkTB()
{
  mkTB_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkTB()
{
  MODEL_mkTB *model = new MODEL_mkTB();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkTB &INST_top = *((MOD_mkTB *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d107;
	 tUInt8 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d111;
	 tUInt8 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1___d62;
	 tUInt8 DEF_INST_top_DEF_NOT_start_wire_whas__3_4_OR_NOT_start_wire_wge_ETC___d67;
	 tUInt8 DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84;
	 tUInt8 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d92;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d91;
	 tUInt8 DEF_INST_top_DEF_abort_wget____d61;
	 tUInt8 DEF_INST_top_DEF_abort_whas____d60;
	 tUInt8 DEF_INST_top_DEF_start_reg__h10358;
	 tUInt8 DEF_INST_top_DEF_running__h10444;
	 tUInt8 DEF_INST_top_DEF_start_wire_wget____d65;
	 tUInt8 DEF_INST_top_DEF_start_wire_whas____d63;
	 tUInt8 DEF_INST_top_DEF_dut_flag_a__h1729;
	 tUInt8 DEF_INST_top_DEF_dut_flag_b__h1731;
	 tUInt8 DEF_INST_top_DEF_start_reg_1__h9273;
	 tUInt8 DEF_INST_top_DEF_state_fired__h9275;
	 tUInt8 DEF_INST_top_DEF_state_mkFSMstate_read____d88;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_adder_r1;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_adder_r1;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_r1;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_r1;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_sqrt_r1;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_sqrt_r1;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_add_rule;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_add_rule;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_sub_rule;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_sub_rule;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_r;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_r;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_rule;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_rule;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_last_step;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_last_step;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_dut_l;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_dut_l;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_state_every;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_state_every;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_restart;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_restart;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l175c12;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_idle_l173c17;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_idle_l173c17;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_auto_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_auto_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_15;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_15;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_16;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_16;
	 DEF_INST_top_DEF_state_mkFSMstate_read____d88 = INST_top.INST_state_mkFSMstate.METH_read();
	 DEF_INST_top_DEF_abort_whas____d60 = INST_top.INST_abort.METH_whas();
	 DEF_INST_top_DEF_abort_wget____d61 = INST_top.INST_abort.METH_wget();
	 DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84 = !DEF_INST_top_DEF_abort_whas____d60 || !DEF_INST_top_DEF_abort_wget____d61;
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1 = DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84 && DEF_INST_top_DEF_state_mkFSMstate_read____d88 == (tUInt8)1u;
	 INST_top.DEF_WILL_FIRE_RL_action_l176c1 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1;
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9 = INST_top.INST_dut_sqrt_out.METH_i_notEmpty() && (DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84 && DEF_INST_top_DEF_state_mkFSMstate_read____d88 == (tUInt8)2u);
	 INST_top.DEF_WILL_FIRE_RL_action_l177c9 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9;
	 DEF_INST_top_DEF_state_fired__h9275 = INST_top.INST_state_fired.METH_read();
	 DEF_INST_top_DEF_start_reg_1__h9273 = INST_top.INST_start_reg_1.METH_read();
	 DEF_INST_top_DEF_running__h10444 = INST_top.INST_running.METH_read();
	 DEF_INST_top_DEF_start_reg__h10358 = INST_top.INST_start_reg.METH_read();
	 DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d91 = DEF_INST_top_DEF_state_mkFSMstate_read____d88 == (tUInt8)3u;
	 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1___d62 = DEF_INST_top_DEF_abort_whas____d60 && DEF_INST_top_DEF_abort_wget____d61;
	 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d92 = (DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1___d62 || DEF_INST_top_DEF_state_mkFSMstate_read____d88 == (tUInt8)0u) || DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d91;
	 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d107 = DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d92 && (!DEF_INST_top_DEF_start_reg_1__h9273 || DEF_INST_top_DEF_state_fired__h9275);
	 DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d111 = DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d107 && !DEF_INST_top_DEF_start_reg__h10358;
	 DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish = DEF_INST_top_DEF_running__h10444 && DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d111;
	 DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish = DEF_INST_top_DEF_CAN_FIRE_RL_auto_finish;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_add_rule = INST_top.INST_dut_adder_in.METH_i_notFull() && INST_top.INST_dut_flag_start.METH_read();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_add_rule = DEF_INST_top_DEF_CAN_FIRE_RL_dut_add_rule;
	 DEF_INST_top_DEF_CAN_FIRE_RL_auto_start = DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d111 && !DEF_INST_top_DEF_running__h10444;
	 DEF_INST_top_DEF_WILL_FIRE_RL_auto_start = DEF_INST_top_DEF_CAN_FIRE_RL_auto_start;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_adder_r1 = INST_top.INST_dut_adder_in.METH_i_notEmpty() && INST_top.INST_dut_adder_out.METH_i_notFull();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_adder_r1 = DEF_INST_top_DEF_CAN_FIRE_RL_dut_adder_r1;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_l = INST_top.INST_dut_sqrt_in.METH_i_notFull() && INST_top.INST_dut_flag_last.METH_read();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_l = DEF_INST_top_DEF_CAN_FIRE_RL_dut_l;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_last_step = INST_top.INST_dut_mul_out.METH_i_notEmpty() && INST_top.INST_dut_flag_c.METH_read();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_last_step = DEF_INST_top_DEF_CAN_FIRE_RL_dut_last_step;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_r1 = INST_top.INST_dut_mul_in.METH_i_notEmpty() && INST_top.INST_dut_mul_out.METH_i_notFull();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_r1 = DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_r1;
	 DEF_INST_top_DEF_dut_flag_b__h1731 = INST_top.INST_dut_flag_b.METH_read();
	 DEF_INST_top_DEF_dut_flag_a__h1729 = INST_top.INST_dut_flag_a.METH_read();
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_r = INST_top.INST_dut_adder_out.METH_i_notEmpty() && (DEF_INST_top_DEF_dut_flag_a__h1729 && DEF_INST_top_DEF_dut_flag_b__h1731);
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_r = DEF_INST_top_DEF_CAN_FIRE_RL_dut_r;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_rule = INST_top.INST_dut_mul_in.METH_i_notFull() && INST_top.INST_dut_flag_adder.METH_read();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_rule = DEF_INST_top_DEF_CAN_FIRE_RL_dut_mul_rule;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_sqrt_r1 = INST_top.INST_dut_sqrt_in.METH_i_notEmpty() && INST_top.INST_dut_sqrt_out.METH_i_notFull();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_sqrt_r1 = DEF_INST_top_DEF_CAN_FIRE_RL_dut_sqrt_r1;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_sub_rule = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_sub_rule = DEF_INST_top_DEF_CAN_FIRE_RL_dut_sub_rule;
	 DEF_INST_top_DEF_CAN_FIRE_RL_dut_start = INST_top.INST_dut_incoming.METH_i_notEmpty();
	 DEF_INST_top_DEF_WILL_FIRE_RL_dut_start = DEF_INST_top_DEF_CAN_FIRE_RL_dut_start;
	 DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start = DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d107 && DEF_INST_top_DEF_start_reg__h10358;
	 DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start = DEF_INST_top_DEF_CAN_FIRE_RL_fsm_start;
	 DEF_INST_top_DEF_CAN_FIRE_RL_restart = (DEF_INST_top_DEF_start_reg_1__h9273 && !DEF_INST_top_DEF_state_fired__h9275) && DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84;
	 DEF_INST_top_DEF_WILL_FIRE_RL_restart = DEF_INST_top_DEF_CAN_FIRE_RL_restart;
	 DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_start_reg__dreg_update;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_every = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_every = DEF_INST_top_DEF_CAN_FIRE_RL_state_every;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_15 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_15 = DEF_INST_top_DEF_CAN_FIRE___me_check_15;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_state_fired__dreg_update;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_16 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_16 = DEF_INST_top_DEF_CAN_FIRE___me_check_16;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l176c1)
	   INST_top.RL_action_l176c1();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_auto_finish)
	   INST_top.RL_auto_finish();
	 if (INST_top.DEF_WILL_FIRE_RL_action_l177c9)
	   INST_top.RL_action_l177c9();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_auto_start)
	   INST_top.RL_auto_start();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_adder_r1)
	   INST_top.RL_dut_adder_r1();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_l)
	   INST_top.RL_dut_l();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_last_step)
	   INST_top.RL_dut_last_step();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_r1)
	   INST_top.RL_dut_mul_r1();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_mul_rule)
	   INST_top.RL_dut_mul_rule();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_r)
	   INST_top.RL_dut_r();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_add_rule)
	   INST_top.RL_dut_add_rule();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_sqrt_r1)
	   INST_top.RL_dut_sqrt_r1();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_sub_rule)
	   INST_top.RL_dut_sub_rule();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_dut_start)
	   INST_top.RL_dut_start();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_16)
	   INST_top.__me_check_16();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_fsm_start)
	   INST_top.RL_fsm_start();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_restart)
	   INST_top.RL_restart();
	 DEF_INST_top_DEF_start_wire_whas____d63 = INST_top.INST_start_wire.METH_whas();
	 DEF_INST_top_DEF_start_wire_wget____d65 = INST_top.INST_start_wire.METH_wget();
	 DEF_INST_top_DEF_CAN_FIRE_RL_action_l175c12 = (INST_top.INST_dut_incoming.METH_i_notFull() && ((DEF_INST_top_DEF_start_wire_whas____d63 && DEF_INST_top_DEF_start_wire_wget____d65) && DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1_2_OR_state_mkF_ETC___d92)) && !(DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1);
	 INST_top.DEF_WILL_FIRE_RL_action_l175c12 = DEF_INST_top_DEF_CAN_FIRE_RL_action_l175c12;
	 DEF_INST_top_DEF_NOT_start_wire_whas__3_4_OR_NOT_start_wire_wge_ETC___d67 = !DEF_INST_top_DEF_start_wire_whas____d63 || !DEF_INST_top_DEF_start_wire_wget____d65;
	 DEF_INST_top_DEF_CAN_FIRE_RL_idle_l173c17 = (DEF_INST_top_DEF_NOT_start_wire_whas__3_4_OR_NOT_start_wire_wge_ETC___d67 && (DEF_INST_top_DEF_NOT_abort_whas__0_2_OR_NOT_abort_wget__1_3___d84 && DEF_INST_top_DEF_state_mkFSMstate_read__8_EQ_3___d91)) && !(DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1);
	 DEF_INST_top_DEF_WILL_FIRE_RL_idle_l173c17 = DEF_INST_top_DEF_CAN_FIRE_RL_idle_l173c17;
	 DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort = (DEF_INST_top_DEF_abort_whas__0_AND_abort_wget__1___d62 && DEF_INST_top_DEF_NOT_start_wire_whas__3_4_OR_NOT_start_wire_wge_ETC___d67) && !((DEF_INST_top_DEF_CAN_FIRE_RL_action_l177c9 || DEF_INST_top_DEF_CAN_FIRE_RL_action_l176c1) || DEF_INST_top_DEF_CAN_FIRE_RL_restart);
	 DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort = DEF_INST_top_DEF_CAN_FIRE_RL_state_handle_abort;
	 if (INST_top.DEF_WILL_FIRE_RL_action_l175c12)
	   INST_top.RL_action_l175c12();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_start_reg__dreg_update)
	   INST_top.RL_start_reg__dreg_update();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_handle_abort)
	   INST_top.RL_state_handle_abort();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_15)
	   INST_top.__me_check_15();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_idle_l173c17)
	   INST_top.RL_idle_l173c17();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_every)
	   INST_top.RL_state_every();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_state_fired__dreg_update)
	   INST_top.RL_state_fired__dreg_update();
	 INST_top.INST_state_fired_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_overlap_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_state_set_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_abort.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_reg_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_start_wire.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_dut_adder_in.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_adder_out.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_mul_in.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_mul_out.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_sqrt_in.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_sqrt_out.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_dut_reg_a.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_reg_b.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_reg_c.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_reg_d.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_reg_e.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_a.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_b.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_c.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_last.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_adder.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_mul.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_flag_start.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_dut_incoming.rst_tick_clk((tUInt8)1u);
	   INST_top.INST_start_reg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_start_reg_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_mkFSMstate.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_fired.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_state_can_overlap.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_running.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkTB::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkTB_instance = new MOD_mkTB(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkTB_instance->INST_dut_adder_in.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_adder_out.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_mul_in.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_mul_out.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_sqrt_in.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_sqrt_out.set_clk_0)("CLK");
  (mkTB_instance->INST_dut_incoming.set_clk_0)("CLK");
  (mkTB_instance->INST_start_wire.set_clk_0)("CLK");
  (mkTB_instance->INST_start_reg_2.set_clk_0)("CLK");
  (mkTB_instance->INST_abort.set_clk_0)("CLK");
  (mkTB_instance->INST_state_set_pw.set_clk_0)("CLK");
  (mkTB_instance->INST_state_overlap_pw.set_clk_0)("CLK");
  (mkTB_instance->INST_state_fired_1.set_clk_0)("CLK");
  (mkTB_instance->set_clk_0)("CLK");
}
void MODEL_mkTB::destroy_model()
{
  delete mkTB_instance;
  mkTB_instance = NULL;
}
void MODEL_mkTB::reset_model(bool asserted)
{
  (mkTB_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkTB::get_instance()
{
  return mkTB_instance;
}

/* Fill in version numbers */
void MODEL_mkTB::get_version(char const **name, char const **build)
{
  *name = "2023.07";
  *build = "0eb551dc";
}

/* Get the model creation time */
time_t MODEL_mkTB::get_creation_time()
{
  
  /* Sun Feb 18 17:28:48 UTC 2024 */
  return 1708277328llu;
}

/* State dumping function */
void MODEL_mkTB::dump_state()
{
  (mkTB_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkTB & mkTB_backing(tSimStateHdl simHdl)
{
  static MOD_mkTB *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkTB(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkTB::dump_VCD_defs()
{
  (mkTB_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkTB::dump_VCD(tVCDDumpType dt)
{
  (mkTB_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkTB_backing(sim_hdl));
}
