/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
 * 
 * On Mon Jan 15 17:30:16 CET 2024
 * 
 */

/* Generation options: */
#ifndef __mkHelloTestbench_h__
#define __mkHelloTestbench_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the mkHelloTestbench module */
class MOD_mkHelloTestbench : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_counter;
  MOD_Reg<tUInt32> INST_dut_counter;
  MOD_Reg<tUInt8> INST_dut_ledStatus;
  MOD_Reg<tUInt8> INST_ledLastCycle;
 
 /* Constructor */
 public:
  MOD_mkHelloTestbench(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt8 DEF_dut_counter_EQ_0x1FFFFFF___d2;
  tUInt32 DEF_b__h383;
  tUInt32 DEF_b__h118;
 
 /* Local definitions */
 private:
  tUInt8 DEF_dut_ledStatus__h353;
  tUInt64 DEF_v__h162;
  tUInt8 DEF_NOT_dut_ledStatus___d7;
 
 /* Rules */
 public:
  void RL_dut_count();
  void RL_dut_hellodisplay();
  void RL_checkLedStatus();
  void RL_counterIncr();
  void RL_endSimulation();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_mkHelloTestbench &backing);
  void vcd_defs(tVCDDumpType dt, MOD_mkHelloTestbench &backing);
  void vcd_prims(tVCDDumpType dt, MOD_mkHelloTestbench &backing);
};

#endif /* ifndef __mkHelloTestbench_h__ */
