/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
 * 
 * On Tue Jan 16 17:56:16 CET 2024
 * 
 */
#include "bluesim_primitives.h"
#include "model_mkThirdFSM.h"

#include <cstdlib>
#include <time.h>
#include "bluesim_kernel_api.h"
#include "bs_vcd.h"
#include "bs_reset.h"


/* Constructor */
MODEL_mkThirdFSM::MODEL_mkThirdFSM()
{
  mkThirdFSM_instance = NULL;
}

/* Function for creating a new model */
void * new_MODEL_mkThirdFSM()
{
  MODEL_mkThirdFSM *model = new MODEL_mkThirdFSM();
  return (void *)(model);
}

/* Schedule functions */

static void schedule_posedge_CLK(tSimStateHdl simHdl, void *instance_ptr)
       {
	 MOD_mkThirdFSM &INST_top = *((MOD_mkThirdFSM *)(instance_ptr));
	 tUInt8 DEF_INST_top_DEF_i_3_ULT_20___d44;
	 tUInt8 DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_ETC___d48;
	 tUInt8 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d64;
	 tUInt8 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget___d10;
	 tUInt8 DEF_INST_top_DEF_NOT_myFSM_start_wire_whas__1_2_OR_NOT_myFSM_st_ETC___d15;
	 tUInt8 DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32;
	 tUInt8 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d40;
	 tUInt8 DEF_INST_top_DEF_myFSM_state_mkFSMstate_read__6_EQ_4___d39;
	 tUInt8 DEF_INST_top_DEF_pw_whas____d34;
	 tUInt8 DEF_INST_top_DEF_myFSM_start_reg__h14321;
	 tUInt8 DEF_INST_top_DEF_myFSM_start_wire_wget____d13;
	 tUInt8 DEF_INST_top_DEF_myFSM_start_wire_whas____d11;
	 tUInt8 DEF_INST_top_DEF_myFSM_start_reg_1__h12774;
	 tUInt8 DEF_INST_top_DEF_myFSM_abort_wget____d9;
	 tUInt8 DEF_INST_top_DEF_myFSM_abort_whas____d8;
	 tUInt8 DEF_INST_top_DEF_myFSM_state_fired__h12776;
	 tUInt8 DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_count;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_count;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_restCount;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_restCount;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_start_reg__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_handle_abort;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_fired__dreg_update;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_every;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_every;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_restart;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_restart;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_init_l20c13;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_idle_l19c9;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_idle_l19c9;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_fsm_start;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_fsm_start;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE_RL_startFSM;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE_RL_startFSM;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_7;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_7;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_8;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_8;
	 tUInt8 DEF_INST_top_DEF_CAN_FIRE___me_check_9;
	 tUInt8 DEF_INST_top_DEF_WILL_FIRE___me_check_9;
	 INST_top.DEF_b__h138 = INST_top.INST_counter.METH_read();
	 DEF_INST_top_DEF_CAN_FIRE_RL_count = (INST_top.DEF_b__h138) < 99u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_count = DEF_INST_top_DEF_CAN_FIRE_RL_count;
	 DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 = INST_top.INST_myFSM_state_mkFSMstate.METH_read();
	 DEF_INST_top_DEF_myFSM_state_fired__h12776 = INST_top.INST_myFSM_state_fired.METH_read();
	 DEF_INST_top_DEF_myFSM_abort_whas____d8 = INST_top.INST_myFSM_abort.METH_whas();
	 DEF_INST_top_DEF_myFSM_abort_wget____d9 = INST_top.INST_myFSM_abort.METH_wget();
	 DEF_INST_top_DEF_myFSM_start_reg_1__h12774 = INST_top.INST_myFSM_start_reg_1.METH_read();
	 DEF_INST_top_DEF_myFSM_start_reg__h14321 = INST_top.INST_myFSM_start_reg.METH_read();
	 DEF_INST_top_DEF_myFSM_state_mkFSMstate_read__6_EQ_4___d39 = DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 == (tUInt8)4u;
	 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget___d10 = DEF_INST_top_DEF_myFSM_abort_whas____d8 && DEF_INST_top_DEF_myFSM_abort_wget____d9;
	 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d40 = (DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget___d10 || DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 == (tUInt8)0u) || DEF_INST_top_DEF_myFSM_state_mkFSMstate_read__6_EQ_4___d39;
	 DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d64 = DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d40 && (!DEF_INST_top_DEF_myFSM_start_reg_1__h12774 || DEF_INST_top_DEF_myFSM_state_fired__h12776);
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_fsm_start = DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d64 && DEF_INST_top_DEF_myFSM_start_reg__h14321;
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_fsm_start = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_fsm_start;
	 DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32 = !DEF_INST_top_DEF_myFSM_abort_whas____d8 || !DEF_INST_top_DEF_myFSM_abort_wget____d9;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_restart = (DEF_INST_top_DEF_myFSM_start_reg_1__h12774 && !DEF_INST_top_DEF_myFSM_state_fired__h12776) && DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32;
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_restart = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_restart;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_start_reg__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_start_reg__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_start_reg__dreg_update;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_every = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_every = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_every;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_fired__dreg_update = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_fired__dreg_update = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_fired__dreg_update;
	 DEF_INST_top_DEF_CAN_FIRE_RL_restCount = (INST_top.DEF_b__h138) == 99u;
	 DEF_INST_top_DEF_WILL_FIRE_RL_restCount = DEF_INST_top_DEF_CAN_FIRE_RL_restCount;
	 DEF_INST_top_DEF_CAN_FIRE_RL_startFSM = DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d64 && !DEF_INST_top_DEF_myFSM_start_reg__h14321;
	 DEF_INST_top_DEF_WILL_FIRE_RL_startFSM = DEF_INST_top_DEF_CAN_FIRE_RL_startFSM;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_8 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_8 = DEF_INST_top_DEF_CAN_FIRE___me_check_8;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_7 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_7 = DEF_INST_top_DEF_CAN_FIRE___me_check_7;
	 DEF_INST_top_DEF_CAN_FIRE___me_check_9 = (tUInt8)1u;
	 DEF_INST_top_DEF_WILL_FIRE___me_check_9 = DEF_INST_top_DEF_CAN_FIRE___me_check_9;
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_count)
	   INST_top.RL_count();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_restart)
	   INST_top.RL_myFSM_restart();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_restCount)
	   INST_top.RL_restCount();
	 DEF_INST_top_DEF_pw_whas____d34 = INST_top.INST_pw.METH_whas();
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13 = DEF_INST_top_DEF_pw_whas____d34 && (DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32 && DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 == (tUInt8)2u);
	 INST_top.DEF_WILL_FIRE_RL_myFSM_action_f_update_l20c13 = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13;
	 INST_top.DEF_b__h5556 = INST_top.INST_i.METH_read();
	 DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_ETC___d48 = DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32 && (DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 == (tUInt8)1u || DEF_INST_top_DEF_myFSM_state_mkFSMstate_read____d36 == (tUInt8)3u);
	 DEF_INST_top_DEF_i_3_ULT_20___d44 = (INST_top.DEF_b__h5556) < 20u;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17 = DEF_INST_top_DEF_pw_whas____d34 && (DEF_INST_top_DEF_i_3_ULT_20___d44 && DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_ETC___d48);
	 INST_top.DEF_WILL_FIRE_RL_myFSM_action_l21c17 = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13 = DEF_INST_top_DEF_pw_whas____d34 && (!DEF_INST_top_DEF_i_3_ULT_20___d44 && DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_ETC___d48);
	 INST_top.DEF_WILL_FIRE_RL_myFSM_action_l23c13 = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13;
	 if (INST_top.DEF_WILL_FIRE_RL_myFSM_action_f_update_l20c13)
	   INST_top.RL_myFSM_action_f_update_l20c13();
	 if (INST_top.DEF_WILL_FIRE_RL_myFSM_action_l21c17)
	   INST_top.RL_myFSM_action_l21c17();
	 if (INST_top.DEF_WILL_FIRE_RL_myFSM_action_l23c13)
	   INST_top.RL_myFSM_action_l23c13();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_startFSM)
	   INST_top.RL_startFSM();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_8)
	   INST_top.__me_check_8();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_9)
	   INST_top.__me_check_9();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_fsm_start)
	   INST_top.RL_myFSM_fsm_start();
	 DEF_INST_top_DEF_myFSM_start_wire_whas____d11 = INST_top.INST_myFSM_start_wire.METH_whas();
	 DEF_INST_top_DEF_myFSM_start_wire_wget____d13 = INST_top.INST_myFSM_start_wire.METH_wget();
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_init_l20c13 = (DEF_INST_top_DEF_pw_whas____d34 && ((DEF_INST_top_DEF_myFSM_start_wire_whas____d11 && DEF_INST_top_DEF_myFSM_start_wire_wget____d13) && DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget_0_OR_myF_ETC___d40)) && !((DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13 || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13) || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17);
	 INST_top.DEF_WILL_FIRE_RL_myFSM_action_f_init_l20c13 = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_init_l20c13;
	 DEF_INST_top_DEF_NOT_myFSM_start_wire_whas__1_2_OR_NOT_myFSM_st_ETC___d15 = !DEF_INST_top_DEF_myFSM_start_wire_whas____d11 || !DEF_INST_top_DEF_myFSM_start_wire_wget____d13;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_idle_l19c9 = (DEF_INST_top_DEF_NOT_myFSM_start_wire_whas__1_2_OR_NOT_myFSM_st_ETC___d15 && (DEF_INST_top_DEF_NOT_myFSM_abort_whas_0_OR_NOT_myFSM_abort_wget_1___d32 && DEF_INST_top_DEF_myFSM_state_mkFSMstate_read__6_EQ_4___d39)) && !((DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13 || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13) || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17);
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_idle_l19c9 = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_idle_l19c9;
	 DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_handle_abort = (DEF_INST_top_DEF_myFSM_abort_whas_AND_myFSM_abort_wget___d10 && DEF_INST_top_DEF_NOT_myFSM_start_wire_whas__1_2_OR_NOT_myFSM_st_ETC___d15) && !((DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l23c13 || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_f_update_l20c13) || (DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_action_l21c17 || DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_restart));
	 DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_handle_abort = DEF_INST_top_DEF_CAN_FIRE_RL_myFSM_state_handle_abort;
	 if (INST_top.DEF_WILL_FIRE_RL_myFSM_action_f_init_l20c13)
	   INST_top.RL_myFSM_action_f_init_l20c13();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_start_reg__dreg_update)
	   INST_top.RL_myFSM_start_reg__dreg_update();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_handle_abort)
	   INST_top.RL_myFSM_state_handle_abort();
	 if (DEF_INST_top_DEF_WILL_FIRE___me_check_7)
	   INST_top.__me_check_7();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_idle_l19c9)
	   INST_top.RL_myFSM_idle_l19c9();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_every)
	   INST_top.RL_myFSM_state_every();
	 if (DEF_INST_top_DEF_WILL_FIRE_RL_myFSM_state_fired__dreg_update)
	   INST_top.RL_myFSM_state_fired__dreg_update();
	 INST_top.INST_myFSM_state_fired_1.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_myFSM_state_overlap_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_myFSM_state_set_pw.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_myFSM_abort.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_myFSM_start_reg_2.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_myFSM_start_wire.clk((tUInt8)1u, (tUInt8)1u);
	 INST_top.INST_pw.clk((tUInt8)1u, (tUInt8)1u);
	 if (do_reset_ticks(simHdl))
	 {
	   INST_top.INST_counter.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_i.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_myFSM_start_reg.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_myFSM_start_reg_1.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_myFSM_state_mkFSMstate.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_myFSM_state_fired.rst_tick__clk__1((tUInt8)1u);
	   INST_top.INST_myFSM_state_can_overlap.rst_tick__clk__1((tUInt8)1u);
	 }
       };

/* Model creation/destruction functions */

void MODEL_mkThirdFSM::create_model(tSimStateHdl simHdl, bool master)
{
  sim_hdl = simHdl;
  init_reset_request_counters(sim_hdl);
  mkThirdFSM_instance = new MOD_mkThirdFSM(sim_hdl, "top", NULL);
  bk_get_or_define_clock(sim_hdl, "CLK");
  if (master)
  {
    bk_alter_clock(sim_hdl, bk_get_clock_by_name(sim_hdl, "CLK"), CLK_LOW, false, 0llu, 5llu, 5llu);
    bk_use_default_reset(sim_hdl);
  }
  bk_set_clock_event_fn(sim_hdl,
			bk_get_clock_by_name(sim_hdl, "CLK"),
			schedule_posedge_CLK,
			NULL,
			(tEdgeDirection)(POSEDGE));
  (mkThirdFSM_instance->INST_pw.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_start_wire.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_start_reg_2.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_abort.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_state_set_pw.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_state_overlap_pw.set_clk_0)("CLK");
  (mkThirdFSM_instance->INST_myFSM_state_fired_1.set_clk_0)("CLK");
  (mkThirdFSM_instance->set_clk_0)("CLK");
}
void MODEL_mkThirdFSM::destroy_model()
{
  delete mkThirdFSM_instance;
  mkThirdFSM_instance = NULL;
}
void MODEL_mkThirdFSM::reset_model(bool asserted)
{
  (mkThirdFSM_instance->reset_RST_N)(asserted ? (tUInt8)0u : (tUInt8)1u);
}
void * MODEL_mkThirdFSM::get_instance()
{
  return mkThirdFSM_instance;
}

/* Fill in version numbers */
void MODEL_mkThirdFSM::get_version(char const **name, char const **build)
{
  *name = "2023.07";
  *build = "0eb551dc";
}

/* Get the model creation time */
time_t MODEL_mkThirdFSM::get_creation_time()
{
  
  /* Tue Jan 16 16:56:16 UTC 2024 */
  return 1705424176llu;
}

/* State dumping function */
void MODEL_mkThirdFSM::dump_state()
{
  (mkThirdFSM_instance->dump_state)(0u);
}

/* VCD dumping functions */
MOD_mkThirdFSM & mkThirdFSM_backing(tSimStateHdl simHdl)
{
  static MOD_mkThirdFSM *instance = NULL;
  if (instance == NULL)
  {
    vcd_set_backing_instance(simHdl, true);
    instance = new MOD_mkThirdFSM(simHdl, "top", NULL);
    vcd_set_backing_instance(simHdl, false);
  }
  return *instance;
}
void MODEL_mkThirdFSM::dump_VCD_defs()
{
  (mkThirdFSM_instance->dump_VCD_defs)(vcd_depth(sim_hdl));
}
void MODEL_mkThirdFSM::dump_VCD(tVCDDumpType dt)
{
  (mkThirdFSM_instance->dump_VCD)(dt, vcd_depth(sim_hdl), mkThirdFSM_backing(sim_hdl));
}
