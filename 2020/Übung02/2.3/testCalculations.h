/*
 * Generated by Bluespec Compiler, version 2023.07 (build 0eb551dc)
 * 
 * On Wed Jan 17 17:54:55 CET 2024
 * 
 */

/* Generation options: */
#ifndef __testCalculations_h__
#define __testCalculations_h__

#include "bluesim_types.h"
#include "bs_module.h"
#include "bluesim_primitives.h"
#include "bs_vcd.h"


/* Class declaration for the testCalculations module */
class MOD_testCalculations : public Module {
 
 /* Clock handles */
 private:
  tClock __clk_handle_0;
 
 /* Clock gate handles */
 public:
  tUInt8 *clk_gate[0];
 
 /* Instantiation parameters */
 public:
 
 /* Module state */
 public:
  MOD_Reg<tUInt32> INST_cntr;
  MOD_Reg<tUInt32> INST_uut_a;
  MOD_Wire<tUInt32> INST_uut_addA_a;
  MOD_Reg<tUInt32> INST_uut_addA_p;
  MOD_Fifo<tUInt32> INST_uut_addA_r;
  MOD_Reg<tUInt32> INST_uut_b;
  MOD_Reg<tUInt32> INST_uut_c;
  MOD_Wire<tUInt32> INST_uut_calcUnits_3_a;
  MOD_Fifo<tUInt32> INST_uut_calcUnits_3_r;
  MOD_Wire<tUInt32> INST_uut_calcUnits_4_a;
  MOD_Fifo<tUInt32> INST_uut_calcUnits_4_r;
  MOD_Fifo<tUInt32> INST_uut_inFIFO;
  MOD_Reg<tUInt8> INST_uut_initialised;
  MOD_Fifo<tUInt32> INST_uut_outFIFO;
  MOD_Wire<tUInt32> INST_uut_timesB_a;
  MOD_Reg<tUInt32> INST_uut_timesB_p;
  MOD_Fifo<tUInt32> INST_uut_timesB_r;
  MOD_Wire<tUInt32> INST_uut_timesC_a;
  MOD_Reg<tUInt32> INST_uut_timesC_p;
  MOD_Fifo<tUInt32> INST_uut_timesC_r;
 
 /* Constructor */
 public:
  MOD_testCalculations(tSimStateHdl simHdl, char const *name, Module *parent);
 
 /* Symbol init methods */
 private:
  void init_symbols_0();
 
 /* Reset signal definitions */
 private:
  tUInt8 PORT_RST_N;
 
 /* Port definitions */
 public:
 
 /* Publicly accessible definitions */
 public:
  tUInt32 DEF_b__h2528;
 
 /* Local definitions */
 private:
  tUInt64 DEF_v__h2494;
  tUInt64 DEF_v__h2423;
 
 /* Rules */
 public:
  void RL_uut_addA_doCalc();
  void RL_uut_timesB_doCalc();
  void RL_uut_timesC_doCalc();
  void RL_uut_calcUnits_3_calc();
  void RL_uut_calcUnits_4_calc();
  void RL_uut_initialise();
  void RL_uut_calc();
  void RL_uut_calc_1();
  void RL_uut_calc_2();
  void RL_uut_calc_3();
  void RL_uut_setupCalc();
  void RL_uut_outputResult();
  void RL_printResult();
  void RL_putData();
  void RL_countUp();
  void RL_endIt();
 
 /* Methods */
 public:
 
 /* Reset routines */
 public:
  void reset_RST_N(tUInt8 ARG_rst_in);
 
 /* Static handles to reset routines */
 public:
 
 /* Pointers to reset fns in parent module for asserting output resets */
 private:
 
 /* Functions for the parent module to register its reset fns */
 public:
 
 /* Functions to set the elaborated clock id */
 public:
  void set_clk_0(char const *s);
 
 /* State dumping routine */
 public:
  void dump_state(unsigned int indent);
 
 /* VCD dumping routines */
 public:
  unsigned int dump_VCD_defs(unsigned int levels);
  void dump_VCD(tVCDDumpType dt, unsigned int levels, MOD_testCalculations &backing);
  void vcd_defs(tVCDDumpType dt, MOD_testCalculations &backing);
  void vcd_prims(tVCDDumpType dt, MOD_testCalculations &backing);
};

#endif /* ifndef __testCalculations_h__ */
